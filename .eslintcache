[{"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/App.js":"1","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/index.js":"2","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/MyRoutines.js":"3","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/Auth.js":"4","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/api/index.js":"5","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/Activities.js":"6","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/NewActivityForm.js":"7"},{"size":2341,"mtime":1606587357792,"results":"8","hashOfConfig":"9"},{"size":397,"mtime":1606360026129,"results":"10","hashOfConfig":"9"},{"size":145,"mtime":1606188069046,"results":"11","hashOfConfig":"9"},{"size":1460,"mtime":1606338832034,"results":"12","hashOfConfig":"9"},{"size":1895,"mtime":1606340340398,"results":"13","hashOfConfig":"9"},{"size":285,"mtime":1606360703845,"results":"14","hashOfConfig":"9"},{"size":1827,"mtime":1606587479289,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"wzvwkq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/App.js",["33","34","35","36","37","38"],"import React, { useState, useEffect } from \"react\";\n\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport { getToken, clearToken, fetchAPI, BASE_URL } from \"../api\";\n\n// import {Auth, MyRoutines} from \"./components\"\nimport Auth from \"../components/Auth\";\nimport MyRoutines from \"../components/MyRoutines\";\nimport Activities from '../components/Activities';\nimport NewActivityForm from \"../components/NewActivityForm\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\n  const [masterRoutinesList, setMasterRoutineList] = useState([]);\n  const [masterActivitiesList, setMasterActivitiesList] = useState([]);\n\n  // fetch all routines for all users to view:\n  useEffect(() => {\n    const url = \"http://fitnesstrac-kr.herokuapp.com/api\";\n    fetchAPI(`${url}/routines`, \"GET\")\n      .then((data) => {\n        const routines = data;\n        setMasterRoutineList(routines);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  // fetch all activities for all users to view:\n  useEffect(() => {\n    const url = \"http://fitnesstrac-kr.herokuapp.com/api\";\n    fetchAPI(`${url}/activities`, \"GET\")\n      .then((data) => {\n        const activities = data;\n        setMasterActivitiesList(activities);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  /*\n  useEffect(() => {\n    fetchAPI('http://fitnesstrac-kr.herokuapp.com/api/users/albert/routines','GET')\n      .then((data) => {\n        console.log('first data', data)\n        const { routineList } = data\n        setRoutineList(routineList)\n      })\n      .catch(console.error)\n  }, [isLoggedIn])\n*/\n  console.log(\"masterRoutinesList:\", masterRoutinesList);\n  console.log(\"masterActivitiesList:\", masterActivitiesList);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <header className=\"App-header\">\n          <Auth setIsLoggedIn={setIsLoggedIn} />\n\n          {/* <Link to=\"/activities\"><ActiviteisNav></Link> */}\n        </header>\n        <NewActivityForm \n        />\n        {/* <Activities\n        masterActivitiesList={masterActivitiesList} /> */}\n        {/* <Route path=\"/activities\">\n      <Activites />\n      </Route> */}\n        <Route exact path=\"/myroutines\">\n          <MyRoutines />\n        </Route>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/index.js",[],"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/MyRoutines.js",[],"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/Auth.js",["39","40","41"],"import React, { useState } from \"react\";\n\nimport { loginUser, registerUser } from \"../api\";\n\nconst Auth = (props) => {\n  const { isLoggedIn, setIsLoggedIn } = props;\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  return (\n    <form onSubmit={(event) => event.preventDefault()}>\n      <h3>Register or Log In</h3>\n      {errorMessage ? <h5 className=\"error\">{errorMessage}</h5> : null}\n      <input\n        type=\"text\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        placeholder=\"username\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"password\"\n      />\n      <button\n        onClick={async (event) => {\n          try {\n            const result = await registerUser(username, password);\n            setIsLoggedIn(true);\n          } catch (error) {\n            setErrorMessage(error.message);\n          }\n        }}\n      >\n        Register\n      </button>\n      <button\n        onClick={async (event) => {\n          try {\n            const result = await loginUser(username, password);\n            setIsLoggedIn(true);\n          } catch (error) {\n            setErrorMessage(error.message);\n          }\n        }}\n      >\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default Auth;\n","/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/api/index.js",[],"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/Activities.js",[],"/Users/CoryB/Desktop/course_work/Fitness_Tracker-React/src/components/NewActivityForm.js",["42","43","44"],"import React, {useState} from 'react';\n\nconst NewActivityForm = (props) => {\n    const [activityName, setActivityName] = useState(\"\");\n    const [activitiyDescription, setActivityDescription] = useState(\"\");\n\n    const {masterActivitiesList, setMasterActivitiesList} = props;\n\n    const sendData = {\n        name: activityName,\n        description: activitiyDescription\n    };\n    \n    return (\n        <div id=\"NewActivityForm\">\n            <form\n            className=\"form-activity\"\n            style={{ border: \"1px solid black\"}}\n            onSubmit={(event) => {\n                event.preventDefault();\n                console.log(sendData)}}\n            // event.preventDefault();\n            // onSubmit= fetchAPI(`${BASE_URL}/activities`, \"POST\", sendData)\n            // addToMasterActivityList(activity)\n            // reset form fields (set....(\"\"))\n            >\n                <h3>Create New Activity:</h3>\n                <p>Activity Name:\n                    <input\n                    type=\"text\"\n                    placeholder=\"Activity Name\"\n                    // style={{ width: \"100%\"}}\n                    value={activityName}\n                    onChange={(e) => setActivityName(e.target.value)}\n                     />\n                </p>\n                <p>Activity Description:\n                    <textarea\n                    type=\"text\"\n                    placeholder=\"Activity Description\"\n                    value={activitiyDescription}\n                    onChange={(e) => setActivityDescription(e.target.value)} />\n                </p>\n                <button id=\"form-activity-submit\">SUBMIT</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NewActivityForm;\n\n/*\nendpoint info: method=\"POST\", \"/activities\"\npayload = { \"name\": \"name\", \"description\": \"description\"}\n\n*/",{"ruleId":"45","severity":1,"message":"46","line":3,"column":35,"nodeType":"47","messageId":"48","endLine":3,"endColumn":39},{"ruleId":"45","severity":1,"message":"49","line":3,"column":41,"nodeType":"47","messageId":"48","endLine":3,"endColumn":47},{"ruleId":"45","severity":1,"message":"50","line":4,"column":20,"nodeType":"47","messageId":"48","endLine":4,"endColumn":30},{"ruleId":"45","severity":1,"message":"51","line":4,"column":42,"nodeType":"47","messageId":"48","endLine":4,"endColumn":50},{"ruleId":"45","severity":1,"message":"52","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":18},{"ruleId":"45","severity":1,"message":"53","line":15,"column":10,"nodeType":"47","messageId":"48","endLine":15,"endColumn":20},{"ruleId":"45","severity":1,"message":"53","line":6,"column":11,"nodeType":"47","messageId":"48","endLine":6,"endColumn":21},{"ruleId":"45","severity":1,"message":"54","line":31,"column":19,"nodeType":"47","messageId":"48","endLine":31,"endColumn":25},{"ruleId":"45","severity":1,"message":"54","line":43,"column":19,"nodeType":"47","messageId":"48","endLine":43,"endColumn":25},{"ruleId":"45","severity":1,"message":"55","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":32},{"ruleId":"45","severity":1,"message":"56","line":7,"column":34,"nodeType":"47","messageId":"48","endLine":7,"endColumn":57},{"ruleId":"45","severity":1,"message":"57","line":9,"column":11,"nodeType":"47","messageId":"48","endLine":9,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'clearToken' is defined but never used.","'BASE_URL' is defined but never used.","'Activities' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'result' is assigned a value but never used.","'masterActivitiesList' is assigned a value but never used.","'setMasterActivitiesList' is assigned a value but never used.","'sendData' is assigned a value but never used."]